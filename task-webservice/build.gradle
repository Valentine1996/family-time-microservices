/*
* Build file for Task-webservice
*/
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'
apply plugin: 'docker'
apply plugin: 'eclipse'

buildscript {
	project.ext {
         springBootVersion = '1.5.3.RELEASE'
         jarName = 'basic-task-webservice'
         versionName = '0.0.1'
         gradleDockerVersion = '1.2'
	}
    repositories {
        jcenter()
        mavenCentral()
    }
    
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.springBootVersion}"
        classpath "se.transmode.gradle:gradle-docker:${project.gradleDockerVersion}"
    }
}

task createWrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

// Used by the Docker gradle plugin, group refers to the account under which the docker image is created
group = 'valentyn'
mainClassName = 'com.valentyn.familytime.task.TaskApplication'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencyManagement {
  imports {
    mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Dalston.RELEASE'
  }
}

dependencies {
    // Basic Spring boot with config client
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile("org.springframework.boot:spring-boot-starter-web")    
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.cloud:spring-cloud-starter-hystrix")
    
    // Spring OAuth2 security
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.security.oauth:spring-security-oauth2")
    compile("org.springframework.security:spring-security-jwt")
	compile('org.springframework.cloud:spring-cloud-security')
    
    // Eureka client
    compile('org.springframework.cloud:spring-cloud-starter-eureka')

    //--------------------------------------------------
    //Core
    compile group: 'org.springframework', name: 'spring-context-support', version: '4.3.16.RELEASE'
    //Spring security
    compile group: 'org.springframework.security', name: 'spring-security-core', version: '4.1.1.RELEASE'
    //OAuth2
    compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.0.7.RELEASE'
    // tag::jetty[]jetty
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
        exclude group: "com.fasterxml.jackson.core"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    //Javax el
    compile group: 'javax.el', name: 'el-api', version: '2.2'
    //Testing
    testCompile("junit:junit")
    //For test configuration

    testCompile("org.springframework.boot:spring-boot-starter-test")
    //Rest Dock
    compile group: 'org.springframework.restdocs', name: 'spring-restdocs-core', version: '1.1.0.RELEASE'
    testCompile ("org.springframework.restdocs:spring-restdocs-mockmvc:1.1.0.RELEASE")
    //HSQL
    compile group: 'org.hsqldb', name: 'hsqldb', version: '2.3.1'
    //Mail test servers
    //Greenmail
    compile ('com.icegreen:greenmail:1.4.1') {
        exclude group: "com.sun.mail", module: "javax.mail"
    }
    //Hibernate,JPA
    compile 'org.springframework.boot:spring-boot-starter-data-jpa:1.1.4.RELEASE'
    compile 'org.hibernate:hibernate-core:5.1.0.Final'
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.1.0.Final'
    compile ( 'org.hibernate:hibernate-java8:5.1.0.Final'){
        exclude group: "org.hibernate", module: "hibernate-core"
    }
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    //Mysql
    compile 'mysql:mysql-connector-java:5.1.31'
    //Jackson
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.7.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.8.1'
    //Jayway
    compile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.0.0'
    //Javax mail
    compile group: 'javax.mail', name: 'mail', version: '1.4.7'
    //Guava
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    //Templaters
    //HandleBas
    compile group: 'com.github.jknack', name: 'handlebars', version: '4.0.5'
}

jar {
    baseName = "${project.jarName}"
    version =  "${project.versionName}"
}

/*
* This task builds the docker image by copying the output of the "jar" gradle command
* and moving it to the "build/docker" directory which is used as the staging directory 
* by the docker gradle plugin. We then build the docker image by invoking the appropriate
* Dockerfile.  
*/
task buildDocker(type: Docker, dependsOn: build) {
  push = false
  applicationName = jar.baseName
  tagVersion = jar.version
  dockerfile = file('src/main/docker/Dockerfile')
  doFirst {
    // Copy the built fat jar to the Docker plugin staging directory
    copy {
      from jar
      into stageDir
    }
    // Copy the run.sh file to the Docker plugin staging directory
    copy {
      from "${project.buildDir}/resources/main/run.sh"
      into stageDir
    }
  }
}

run {
    jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=4300,suspend=n','-Dspring.profiles.active=default']
}

